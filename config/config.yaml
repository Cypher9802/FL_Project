import torch
import os

class Config:
    # Dataset Configuration
    NUM_CLASSES = 6  # UCI HAR has 6 activities
    INPUT_SIZE = 128  # Window size (timesteps)
    INPUT_FEATURES = 9  # 3x accelerometer + 3x gyroscope + 3x total acceleration
    
    # Federated Learning Configuration
    TOTAL_CLIENTS = 30  # 30 subjects in UCI HAR
    CLIENT_FRACTION = 0.33  # 10/30 clients per round
    ROUNDS = 30
    LOCAL_EPOCHS = 5  # Increased for better convergence
    BATCH_SIZE = 16  # Smaller batch for mobile optimization
    
    # Differential Privacy Configuration  
    EPSILON = 8.0
    DELTA = 1e-5
    MAX_GRAD_NORM = 1.0
    NOISE_MULTIPLIER = 1.2  # Calibrated for privacy budget
    
    # Model Configuration
    TARGET_ACCURACY = 0.95
    MAX_MODEL_SIZE_MB = 5
    MODEL_SAVE_PATH = "models/fl_model.pt"
    
    # Training Configuration
    DEVICE = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    LR = 0.01  # Higher learning rate for federated setting
    MOMENTUM = 0.9
    WEIGHT_DECAY = 1e-4
    
    # Secure Aggregation
    USE_SECURE_AGGREGATION = True
    AGGREGATION_NOISE_SCALE = 0.1
    
    # Privacy Analysis
    PRIVACY_ACCOUNTANT_TYPE = "rdp"  # RDP for better accounting
    
    @classmethod
    def create_dirs(cls):
        """Create necessary directories"""
        os.makedirs("models", exist_ok=True)
        os.makedirs("logs", exist_ok=True)
        os.makedirs("results", exist_ok=True)

config = Config()
config.create_dirs()
